name: "Build Container"
description: "Build Container"

inputs:
  github_token: 
    descriptions: "GitHub PAT"
    required: true
  sourcecode_home_path: 
    descriptions: "Source Code Home Path"
    required: false
    default: project_src
    
runs:
  using: "composite"
  steps:

    - run: echo "STEP_NAME=Log in to Azure Container Registry (ACR)" >> $GITHUB_ENV
      shell: bash
      
    - name: Log in to Azure Container Registry (ACR)
      uses: azure/docker-login@v1
      with:
          login-server: ${{ env.acr_registry_server }}
          username: ${{ env.acr_user }}
          password: ${{ env.acr_password }}

    - run: echo "STEP_NAME=Build and Push Container Image (ACR)" >> $GITHUB_ENV
      shell: bash
      
    - name: Build and Push Container Image (ACR)
      shell: bash
      run: |
          echo "Build and Push Container Image (ACR)"      
          cd ${{ inputs.sourcecode_home_path }}
          ls -l
          docker build . -t ${{ env.acr_registry_server }}/${{env.APP_NAME}}:${{env.IMAGE_VERSION}}
          docker push ${{ env.acr_registry_server }}/${{env.APP_NAME}}:${{env.IMAGE_VERSION}}

    - run: echo "STEP_NAME=Security Scan Container Image (Anchore)" >> $GITHUB_ENV
      shell: bash
      
    - name: Security Scan Container Image (Anchore)
      uses: anchore/scan-action@b08527d5ae7f7dc76f9621edb6e49eaf47933ccd
      with:
        image: "${{ env.acr_registry_server }}/${{env.APP_NAME}}:${{env.IMAGE_VERSION}}"
        # Generate a SARIF report and set the `sarif` output parameter after successful action execution.  This report is compatible with GitHub Automated Code Scanning (ACS), as the artifact to upload for display as a Code Scanning Alert report.
        acs-report-enable: true
        # Set this to any value to enable verbose debug output
        #debug: # optional, default is false
        # Set to false to avoid failing based on severity-cutoff. Default is to fail when severity-cutoff is reached (or surpassed)
        fail-build: false # optional, default is true      
        # Optionally specify the minimum vulnerability severity to trigger an "error" level ACS result.  Valid choices are "negligible", "low", "medium", "high" and "critical".  Any vulnerability with a severity less than this value will lead to a "warning" result.  Default is "medium".
        #severity-cutoff: critical # optional, default is medium (critical)

    - run: echo "STEP_NAME=Upload Container Image Scan Report (Anchore)" >> $GITHUB_ENV
      shell: bash
      
    - name: Upload Container Image Scan Report (Anchore)
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

    - name: "Failure Notification" 
      uses: e-saving/birdtest-template-cicd/Dev/NotificationAction@main
      if: ${{ failure() }}
      with:
        github_token: ${{ inputs.github_token }}
        notify_mesg: "Build Container Failure at step ${{ env.STEP_NAME }}"
