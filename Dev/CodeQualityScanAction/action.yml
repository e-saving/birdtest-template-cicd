name: "Code Quality Scan"
description: "Code Quality Scan"

inputs:
  github_token: 
    descriptions: "GitHub PAT"
    required: true
  sourcecode_home_path: 
    descriptions: "Source Code Home Path"
    required: false
    default: project_src
  check_quality_gate:
    descriptions: "Check code quality gate true/false"
    required: false
    default: true

   
runs:
  using: "composite"
  steps:
    #- run: echo "STEP_NAME=Check version number" >> $GITHUB_ENV
    #  shell: bash
      
    #- name: Check version number
    #  shell: bash
    #  run: |
    #    echo "Check version number"
    #    img_version=$(cat version/version_control.txt|grep '^IMAGE_VERSION'|awk -F'=' '{print($2)}')
    #    app_name=$(cat version/version_control.txt|grep '^APP_NAME'|awk -F'=' '{print($2)}')
    #    echo "IMAGE_VERSION=${img_version}" >> $GITHUB_ENV
    #    echo "APP_NAME=${app_name}" >> $GITHUB_ENV

    - run: echo "SQ_STEP_NAME=Scan Source Code Quality (SonarQube)" >> $GITHUB_ENV
      shell: bash
      
    - name: Scan Source Code Quality (SonarQube)
      shell: bash
      run: |
          echo "Scan Source Code Quality (SonarQube)"          
          cd ${{ inputs.sourcecode_home_path }}
          mvn sonar:sonar -Dsonar.projectKey=${{env.APP_NAME}} -Dsonar.host.url=${{ env.sonar_host_url }} -Dsonar.login=${{ env.sonar_token }}
      
    - run: echo "SQ_STEP_NAME=Check Code Quality Gate (SonarQube)" >> $GITHUB_ENV
      if: "${{ inputs.check_quality_gate }}" == "true"
      shell: bash
      
    - name: Check Code Quality Gate (SonarQube)    
      uses: SonarSource/sonarqube-quality-gate-action@v1.0.0      
      if: "${{ inputs.check_quality_gate }}" == "true"
      #timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ env.sonar_token }}
      with:
        scanMetadataReportFile: ${{ inputs.sourcecode_home_path }}/target/sonar/report-task.txt

    - name: "Failure Notification" 
      uses: e-saving/birdtest-template-cicd/Dev/NotificationAction@main
      if: ${{ failure() }}
      with:
        github_token: ${{ inputs.github_token }}
        notify_mesg: "Code Quality Scan Failure at step ${{ env.SQ_STEP_NAME }}"
